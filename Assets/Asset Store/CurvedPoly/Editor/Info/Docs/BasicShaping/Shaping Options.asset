%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -1337209931, guid: cb982876f862dda4c84cfd49bae5a49b, type: 3}
  m_Name: Shaping Options
  m_EditorClassIdentifier: 
  topElementName: ShapeOperator,AdvancedShapeOperator
  elementname: Shaping Options
  iconSet: []
  title: Shaping Options
  paragraphs:
  - icons: []
    texts:
    - 'While shaping a model, you should keep control of two important features, <b>Elasticity</b>
      and <b>Edge Normal Functions</b>. '
    mod: 0
  - icons: []
    texts:
    - 'Each Curved Edge has two vertices. When you translate or rotate or scale both
      of them, all the edge is translated, rotated or scaled accordingly. If only
      one of the vertitces is moved instead, the edge need to be reshaped accordingly.
      This features allows you to define how this has to happen. '
    mod: 0
  - icons: []
    texts:
    - Elasticity Mode
    mod: 4
  - icons: []
    texts:
    - 'There are 4 elasticities mechanics, each one with its pros and cons. You are
      invited to experiment with them: you can easily switch between elasticity modes
      and see what changes directly on your actual Selection Transform.'
    mod: 0
  - icons:
    - {fileID: 2800000, guid: 88466a711259a7d479fab112920fe6bd, type: 3}
    texts:
    - '<b>Proportional</b>: edges handles distance from their vertices grows proportinally
      to the edge length. This make the edge looks like its growing proportionally
      when one of its vertices is translated.'
    mod: 3
  - icons:
    - {fileID: 2800000, guid: 59d578e53ecbeee40875c545552f35b2, type: 3}
    texts:
    - '<b>Elastic</b>: the edge will behave like a spring, stretching when the vertices
      are outdistanced or flexing when you move the vertices closer one to the other.'
    mod: 3
  - icons:
    - {fileID: 2800000, guid: d5fef577df239ee47a80adee2a883829, type: 3}
    texts:
    - '<b>Elliptic</b>: <i>This is very important while working on circle or ellipses</i>.
      This is an alternative to proportional, which does its best to ensures that
      circular or elliptic shapes keep being circular or elliptic. '
    mod: 3
  - icons:
    - {fileID: 2800000, guid: 58197e7f7664322419c87a2c855cb305, type: 3}
    texts:
    - '<b>Clayish</b>: This stays for <b>no elasticity</b>. This is very similar to
      what it happens in most of the software dealing with curved edges, so this is
      what you should select if you are uncomfortable with elasticity modes. '
    mod: 3
  - icons:
    - {fileID: 2800000, guid: 58197e7f7664322419c87a2c855cb305, type: 3}
    texts:
    - Edge Normal
    mod: 4
  - icons:
    - {fileID: 2800000, guid: 58197e7f7664322419c87a2c855cb305, type: 3}
    texts:
    - Each curved edge has as a Normal vector assigned to its center. This normal
      may be used by the Interpolation/Filling Algorithms to correct the orientation
      of polygons across the edge, so it's very important that you understand what
      you can do to correct its orientation.
    mod: 0
  - icons:
    - {fileID: 2800000, guid: e74d2196b35c7de49ae35320268b866d, type: 3}
    texts:
    - When an edge is reshaped, its normal must be recomputed. Here are the algorithms
      which are automatically applied during the process.
    mod: 0
  - icons:
    - {fileID: 2800000, guid: e74d2196b35c7de49ae35320268b866d, type: 3}
    texts:
    - '<b>Axis Normal (Default-Optimal Choice)</b>: an algorithm which takes into
      accounts the shape of the Edge, the two editing normals on the two extremes
      vertices and also the direction of other edges nearby the extremes. Such direction
      is called the Axis. Axis Normal is more correct to use in situation where there
      are sharp angles between edges.'
    mod: 3
  - icons:
    - {fileID: 2800000, guid: e74d2196b35c7de49ae35320268b866d, type: 3}
    texts:
    - '<b>Edge Normal</b>: an algorithm which takes into accounts only the shape of
      the Edge and the two editing normals on the two extremes vertices. '
    mod: 3
  - icons:
    - {fileID: 2800000, guid: 8df8b1ef3d317f8429e21a2c8bf1f64b, type: 3}
    texts:
    - '<b>Balance Normal</b>:  an algorithm which takes into account the shape of
      the Edge, the two editing normals on the two extremes vertices and also the
      position of any opposite edge (for quads) or opposite vertex (for triangles)
      on adjacent polygons. The Editing Normal will be perfectly balanced between
      the two opposite positions: this is correct on spherical surfaces equally subdivided
      (as it is for spherical primitives) . '
    mod: 3
  - icons:
    - {fileID: 2800000, guid: e93928e5e7ae73440a253f316fd127e5, type: 3}
    texts:
    - '<b>Reset Normals</b>: reset edges normals on all selected edges.'
    mod: 3
  - icons:
    - {fileID: 2800000, guid: 2e4bbd0da4750fe43b6c86fda230461b, type: 3}
    texts:
    - '<b>Fix Normals</b>: recompute all the normals, both the ones on vertices and
      then the ones on edges. Best used when something looks weird in the way edges
      normals are assigned.'
    mod: 3
